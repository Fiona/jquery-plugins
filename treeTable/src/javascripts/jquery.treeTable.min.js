
(function($){var options;var ghost_row;$.fn.treeTable=function(opts){options=$.extend({},$.fn.treeTable.defaults,opts);var _return=this.each(function(){$(this).addClass("treeTable").find("tbody tr").each(function(){if(!options.expandable||$(this)[0].className.search("child-of-")==-1){initialize($(this));}});});if(options.draggable)
initDragDrop($(this));return _return;};$.fn.treeTable.defaults={childPrefix:"child-of-",expandable:true,indent:19,initialState:"collapsed",treeColumn:0,draggable:false,dragTarget:"tbody tr td .drag_handle",dropTarget:"tbody tr td",dropCallback:function(e,ui){},sortable:false,sortableDropCallback:function(e,ui){}};$.fn.collapse=function(){$(this).addClass("collapsed");childrenOf($(this)).each(function(){initialize($(this));if(!$(this).hasClass("collapsed")){$(this).collapse();}
$(this).hide();});return this;};$.fn.expand=function(){$(this).removeClass("collapsed").addClass("expanded");childrenOf($(this)).each(function(){initialize($(this));if($(this).is(".expanded.parent")){$(this).expand();}
$(this).show();});return this;};$.fn.appendBranchTo=function(destination){var node=$(this);var parent=parentOf(node);var ancestorNames=$.map(ancestorsOf($(destination)),function(a){return a.id;});if($.inArray(node[0].id,ancestorNames)==-1&&(!parent||(destination.id!=parent[0].id))&&destination.id!=node[0].id){indent(node,ancestorsOf(node).length*options.indent*-1);if(parent){node.removeClass(options.childPrefix+parent[0].id);}
node.addClass(options.childPrefix+destination.id);move(node,destination);indent(node,ancestorsOf(node).length*options.indent);add_expandable_widget($(parent));add_expandable_widget($(destination));}
return this;};$.fn.moveBranchBefore=function(destination){var node=$(this);node.insertBefore(destination);childrenOf(node).reverse().each(function(){move($(this),node[0]);});return this;};$.fn.moveBranchAfter=function(destination){var node=$(this);if(childrenOf(destination).length>0)
node.insertAfter(lastChildOf(destination));else
node.insertAfter(destination);childrenOf(node).reverse().each(function(){move($(this),node[0]);});return this;};$.fn.reverse=function(){return this.pushStack(this.get().reverse(),arguments);};$.fn.toggleBranch=function(){if($(this).hasClass("collapsed")){$(this).expand();}else{$(this).removeClass("expanded").collapse();}
return this;};$.fn.parentOf=function(){var classNames=$(this)[0].className.split(' ');for(key in classNames){if(classNames[key].match("child-of-")){return $("#"+classNames[key].substring(9));}}};var cur_level=0;$.fn.serializeTreeTable=function(){var table_id=this[0].id;var serialised_contents=[];cur_level=0;$(this).find("tbody tr").each(function(){if($(this)[0].className.search("child-of-")==-1&&$(this)[0].className.search("ghost_row")==-1){serializeChildren(table_id,$(this),serialised_contents,"");cur_level++;}});return serialised_contents.join("&");};function serializeChildren(table_id,parent,serialed,cur_child_string){serialed.push(table_id+"["+cur_level+"]"+cur_child_string+"[id]="+parent[0].id);var kids=$(parent).nextAll("tr.child-of-"+parent[0].id);cur_child_string+="[children]";if(kids.length>0)
{var kid_level=0;kids.each(function(){serializeChildren(table_id,$(this),serialed,cur_child_string+"["+kid_level+"]");kid_level++;});}};function ancestorsOf(node){var ancestors=[];while(node=parentOf(node)){ancestors[ancestors.length]=node[0];}
return ancestors;};function childrenOf(node){return $("table.treeTable tbody tr."+options.childPrefix+node[0].id);};function lastChildOf(node){return $("table.treeTable tbody tr."+options.childPrefix+node[0].id+":last");};function indent(node,value){var cell=$(node.children("td")[options.treeColumn]);var padding=parseInt(cell.css("padding-left"),10)+value;cell.css("padding-left",+padding+"px");childrenOf(node).each(function(){indent($(this),value);});};function initialize(node){if(!node.hasClass("initialized")){node.addClass("initialized");var childNodes=childrenOf(node);if(!node.hasClass("parent")&&childNodes.length>0){node.addClass("parent");}
if(node.hasClass("parent")){var cell=$(node.children("td")[options.treeColumn]);var padding=parseInt(cell.css("padding-left"),10)+options.indent;childNodes.each(function(){$($(this).children("td")[options.treeColumn]).css("padding-left",padding+"px");});add_expandable_widget(node);}}};function initDragDrop(table){$(options.dragTarget).draggable({helper:"clone",opacity:.75,refreshPositions:true,revert:"invalid",revertDuration:300,scroll:true});if(options.sortable)
{var cell_count=$(options.dropTarget).parents("tr").find("td").length;ghost_row=$("<tr class=\"ghost_row\"><td colspan=\""+cell_count+"\"><span class=\"ghost_text\">Drop here to reorder</span></td></tr>");ghost_row.insertBefore($(table).find("tr:first"));ghost_row.hide();}
$(options.dropTarget).each(function(){$(this).parents("tr").droppable({accept:options.dragTarget,drop:function(e,ui){if(options.sortable)
ghost_row.hide();$($(ui.draggable).parents("tr")).appendBranchTo(this);options.dropCallback(e,ui);},hoverClass:"accept",over:function(e,ui){if(options.sortable)
{var my_par=$(this).parentOf();var draggy_par=$(ui.draggable.parents("tr")).parentOf();if(my_par!=undefined&&draggy_par!=undefined)
{if(my_par[0].id==draggy_par[0].id&&$(this)[0].id!=$(ui.draggable.parents("tr"))[0].id)
{ghost_row.insertAfter(this);ghost_row.show();}
else
$(ghost_row).hide();}}
if(this.id!=ui.draggable.parents("tr")[0].id&&!$(this).is(".expanded"))
$(this).expand();}});});if(options.sortable)
{$("tr td span.ghost_text").each(function(){$(this).parents("tr").droppable({accept:options.dragTarget,drop:function(e,ui){ghost_row.hide();var node=$(ui.draggable.parents("tr"));node.moveBranchAfter($(this).prev("tr"));options.dropCallback(e,ui);}});});}};function add_expandable_widget(node)
{if(options.expandable){var cell=$(node.children("td")[options.treeColumn]);if(childrenOf(node).length==0)
{cell.find("span.expander").remove();return;}
cell.prepend('<span style="margin-left: -'+options.indent+'px; padding-left: '+options.indent+'px" class="expander"></span>');$(cell[0].firstChild).click(function(){node.toggleBranch();});if(!(node.hasClass("expanded")||node.hasClass("collapsed"))){node.addClass(options.initialState);}
if(node.hasClass("collapsed")){node.collapse();}else if(node.hasClass("expanded")){node.expand();}}}
function move(node,destination){node.insertAfter(destination);childrenOf(node).reverse().each(function(){move($(this),node[0]);});};function parentOf(node){return $(node).parentOf();};})(jQuery);